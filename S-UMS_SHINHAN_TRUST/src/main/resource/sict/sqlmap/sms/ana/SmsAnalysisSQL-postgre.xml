<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.sict.ums.sms.ana.dao.SmsAnalysisMapper">

	<select id="getSmsList" parameterType="smsVO" resultType="smsSendLogVO">
		SELECT *
		  FROM (
				SELECT A.MSGID
					 , '' SEND_DT
					 , A.KEYGEN
					 , A.USER_ID
					 , A.DEPT_NO
					 , B.DEPT_NM
					 , A.CAMPUS_NO
					 , C.CAMP_NM 
					 , A.SEND_DATE
					 , A.TASK_NM
					 , '' TEMP_CD
					 , '' TEMP_NM
					 , A.VALID_YN
					 , A.SMS_NAME 
					 , A.SMS_MESSAGE
					 , A.GUBUN
					 , D.CD_NM AS GUBUN_NM
					 , (SELECT COUNT(*) FROM ( SELECT * FROM BIZ_MSG BM UNION ALL SELECT * FROM BIZ_LOG ) T1 WHERE T1.KEYGEN = A.KEYGEN) SEND_TOT_CNT
					 , (SELECT COUNT(*) FROM ( SELECT * FROM BIZ_MSG BM UNION ALL SELECT * FROM BIZ_LOG ) T1 WHERE T1.KEYGEN = A.KEYGEN AND T1.CALL_STATUS IN ('4100','6600')  ) AS SUCC_CNT
					 , (SELECT COUNT(*) FROM ( SELECT * FROM BIZ_MSG BM UNION ALL SELECT * FROM BIZ_LOG ) T1 WHERE T1.KEYGEN = A.KEYGEN AND T1.CALL_STATUS NOT IN ('4100','6600') ) AS FAIL_CNT
					 , 0 AS SUCC_SMS
					 , 0 AS FAIL_SMS
					 , ROW_NUMBER() OVER (ORDER BY A.SEND_DATE DESC) SEQ
					 , COUNT(1) OVER() TOTAL_COUNT
				  FROM NEO_SMS A
					  INNER JOIN NEO_DEPT B ON A.DEPT_NO = B.DEPT_NO
					  INNER JOIN NEO_CAMPAIGN C ON A.CAMPUS_NO = C.CAMP_NO
					  INNER JOIN NEO_CD D ON D.CD_GRP = 'C115' AND A.GUBUN = D.CD
				 WHERE A.SMS_STATUS = '000'
				   AND A.STATUS IN ('002')
				   <if test="searchGubun != null and searchGubun != ''">
				   AND A.GUBUN = #{searchGubun}
				   </if>
				   <if test="searchStartDt != null and searchStartDt != ''">
				   AND A.SEND_DATE &gt;= CAST(CONCAT(#{searchStartDt} , '000000') AS TEXT)
				   </if>
				   <if test="searchEndDt != null and searchEndDt != ''">
				   AND A.SEND_DATE &lt;  CAST(CONCAT(#{searchEndDt} || '240000') AS TEXT)
				   </if>
				   <if test="searchDeptNo != 0">
				   AND A.DEPT_NO = #{searchDeptNo}
				   </if>
				   <if test='searchTaskNm != null and searchTaskNm != ""'>
				   AND A.TASK_NM LIKE '%' || #{searchTaskNm} || '%'
				   </if>
				   <if test='searchCampNo != null and searchCampNo != 0'>
				   AND A.CAMPUS_NO = #{searchCampNo}
				   </if>
				   <if test="searchUserId != null and searchUserId != ''">
				   AND A.USER_ID = #{searchUserId}
				   </if> 
				)
		 WHERE SEQ BETWEEN (#{page}-1)*#{rows}+1 AND #{page}*#{rows}
	</select>
	
	<!-- deprecated -->
	<select id="getSmsInfo" parameterType="smsSendLogVO" resultType="smsSendLogVO">
		SELECT A.MSGID
			 , A.KEYGEN
			 , '' TEMP_CONTENT
			 , A.USER_ID
			 , A.DEPT_NO
			 , B.DEPT_NM
			 , A.CAMPUS_NO
			 , C.CAMP_NM
			 , A.SEND_DATE
			 , A.TASK_NM
			 , '' TEMP_CD 
			 , '' TEMP_NM
			 , A.VALID_YN
			 , A.SEND_DATE
			 , A.SEND_START_DT
			 , A.SEND_END_DT
			 , A.SEND_TOT_CNT
			 , O.SMS_SEND_YN
			 , O.RSLT_CD
			 , A.SMS_MESSAGE
			 , D.CD_NM AS GUBUN_NM
	/*		 , SUM(CASE WHEN O.RSLT_CD = '1' THEN 1 END ) AS SUCC_CNT*/
	/*		 , SUM(CASE WHEN O.RSLT_CD = '0' THEN 1 END ) AS FAIL_CNT*/
			 , 0 AS SUCC_CNT
			 , 0 AS FAIL_CNT
			 , 0 AS SUCC_SMS
			 , 0 AS FAIL_SMS 
/*			 , ROUND(COUNT(CASE WHEN O.RSLT_CD = '1' THEN 1 END) / COUNT(*)*100) || '%' AS SUCC_PER*/
/*			 , ROUND(COUNT(CASE WHEN O.RSLT_CD = '0' THEN 1 END) / COUNT(*)*100) || '%' AS FAIL_PER*/
			 , '%' AS SUCC_PER
			 , '%' AS FAIL_PER
			 , 0 AS SUCC_SMS_PER
			 , 0 AS FAIL_SMS_PER
		  FROM NEO_SMS A 
			   LEFT OUTER JOIN NEO_SMSLOG O ON O.MSGID = A.MSGID AND O.KEYGEN = A.KEYGEN
			   JOIN NEO_DEPT B ON A.DEPT_NO = B.DEPT_NO
			   JOIN NEO_CAMPAIGN C ON A.CAMPUS_NO = C.CAMP_NO
			   JOIN NEO_CD D ON D.CD_GRP = 'C115' AND A.GUBUN = D.CD   
		 WHERE A.STATUS IN ('002')
		   AND A.SMS_STATUS = '000'
		   AND A.GUBUN != '004'
		   AND A.MSGID = #{msgid}
		   AND A.KEYGEN = #{keygen}
/*		 GROUP BY A.MSGID, A.KEYGEN*/
	</select> 

	<!-- deprecated -->
	<select id="getPopSmsSendList" parameterType="smsSendLogVO" resultType="smsSendLogVO">
		SELECT A.MSGID 
			 , A.KEYGEN 
			 , COALESCE(B.PHONE , '') PHONE
			 , B.RSLT_CD 
			 , B.SMS_SEND_YN
		  FROM NEO_SMS A 
			   LEFT OUTER JOIN NEO_SMSLOG B ON B.MSGID = A.MSGID AND B.KEYGEN = A.KEYGEN
		 WHERE A.STATUS IN ('003','004')
		   <if test="gubun == null or gubun == ''">
		   AND A.GUBUN != '004'
		   </if>
		   <if test="gubun != null and gubun != ''">
		   AND A.GUBUN = #{gubun}
		   </if>
		   AND A.SMS_STATUS = '000'
		   <if test='phone != null and phone != ""'>
		   AND B.PHONE = #{phone}
		   </if>
		   AND A.MSGID = #{msgid}
		   AND A.KEYGEN = #{keygen}
		   <if test='rsltCd != null and rsltCd != ""'>
		   AND B.RSLT_CD = #{rsltCd}
		   </if>
		   <if test='smsSendYn != null and smsSendYn != ""'>
		   AND B.SMS_SEND_YN = #{smsSendYn}
		   </if>
	</select>
	<select id="getSmsSendLogList" parameterType="smsSendLogVO" resultType="smsSendLogVO">
		SELECT *
		  FROM (
				SELECT A.MSGID
					 , A.KEYGEN
					 , B.USER_ID AS EXE_USER_ID
					 , B.USER_NM AS EXE_USER_NM
					 , A.DEPT_NO
					 , A.CAMPUS_NO
					 , C.CAMP_NM 
					 , A.SEND_DATE
					 , A.TASK_NM
					 , A.VALID_YN
					 , E.SUBJECT 
					 , E.MSG_BODY 
					 , A.GUBUN
					 , D.CD_NM AS GUBUN_NM
					 , '' AS ID 
					 , E.DEST_NAME AS NAME 
					 , E.DEST_PHONE
					 , E.SEND_PHONE
					 , (CASE WHEN E.CALL_STATUS = '4100' OR E.CALL_STATUS = '6600'
					 		 THEN '1'
					 		 ELSE E.CALL_STATUS
				 		 END) AS RSLT_CD 
				 	 , (SELECT CD_DTL FROM NEO_CD WHERE CD_GRP = 'C135' AND E.CALL_STATUS = CD_NM ) CALL_STATUS_NM
					 , '' AS RCODE
					 , '' AS SEND_GUBUN
					 , '' AS SEND_GUBUN_NM
					 , '' AS RNAME
					 , ROW_NUMBER() OVER (ORDER BY A.REG_DT DESC) SEQ
					 , COUNT(1) OVER() TOTAL_COUNT
				  FROM NEO_SMS A
					  LEFT OUTER JOIN NEO_USER B ON A.EXE_USER_ID = B.USER_ID 
					  JOIN NEO_CAMPAIGN C ON A.CAMPUS_NO = C.CAMP_NO
					  JOIN NEO_CD D ON D.CD_GRP = 'C115' AND A.GUBUN = D.CD
					  JOIN (SELECT * FROM BIZ_MSG 
					  		UNION ALL 
					  		SELECT * FROM BIZ_LOG
					  		) E ON A.KEYGEN  = E.KEYGEN  
				 WHERE A.SMS_STATUS = '000'
				   AND D.CD IN
				   <foreach collection="arrGubunNms" item="item" index="index" open="(" close=")" separator=",">
				   #{item}
				   </foreach>
				   <if test="searchStartDt != null and searchStartDt != ''">
				   AND A.SEND_DATE &gt;= CONCAT(#{searchStartDt},'000000')
				   </if> 
				   <if test="searchEndDt != null and searchEndDt != ''">
				   AND A.SEND_DATE &lt; CONCAT(#{searchEndDt},'240000')
				   </if>
				   <if test='searchCampNm != null and searchCampNm != ""'>
				   AND C.CAMP_NM LIKE CONCAT('%', #{searchCampNm},'%')
				   </if>
				   <if test="searchCustId != null and searchCustId != ''">
				   AND E.ID LIKE CONCAT('%', #{searchCustId},'%')
				   </if> 
				   <if test="searchCustNm != null and searchCustNm != ''">
				   AND E.DEST_NAME LIKE CONCAT('%', #{searchCustNm},'%')
				   </if> 
				   <if test="searchCustPhone != null and searchCustPhone != ''">
				   AND E.DEST_PHONE LIKE CONCAT('%', #{searchCustPhone},'%') 
				   </if> 
				   <if test="searchStatus != null and searchStatus != ''">
				   		<if test="searchStatus == 1">
				   			AND E.CALL_STATUS IN ('4100','6600') 
				   		</if>
				   		<if test="searchStatus == 0">
				   			AND E.CALL_STATUS NOT IN ('4100','6600')
					   </if> 
				   </if>
				   <if test="searchExeUserNm != null and searchExeUserNm != ''">
				   AND E.DEST_NAME LIKE CONCAT('%', #{searchExeUserNm},'%')
				   </if>
				  )
			WHERE SEQ BETWEEN (#{page}-1)*#{rows}+1 AND #{page}*#{rows}
	</select>
	
	<!-- deprecated -->
	<select id ="getSmsMessage" parameterType="smsSendLogVO" resultType="String" >
		SELECT MSG_BODY 
		  FROM NEO_SMSLOG A
		 WHERE MSGID  = #{msgid}
		   AND KEYGEN = #{keygen}
		   AND CMID   = #{cmid}
	</select>
	
	<select id="getCampSmsList" parameterType="smsSendLogVO" resultType="smsSendLogVO" >
		SELECT *
		  FROM (
				SELECT A.CAMPUS_NO AS TEMP_CD
					  , C.CAMP_NM TEMP_NM
					  , A.USER_ID
					  , (SELECT USER_NM FROM NEO_USER WHERE USER_ID = A.USER_ID ) USER_NM
					  , A.SEND_DATE
					  , A.SMS_NAME 
					  , A.SMS_MESSAGE
					  , A.GUBUN
					  , A.STATUS
					  , A.REG_DT SMS_REG_DT
					  , C.REG_DT TEMP_REG_DT
					  , A.CNT SMS_CNT
					  , A.TASK_NM
					  , (SELECT CD_NM FROM NEO_CD WHERE CD_GRP = 'C118' AND CD= A.STATUS AND UILANG = #{uilang}) STATUS_NM
					  , ROW_NUMBER() OVER (ORDER BY A.REG_DT DESC) SEQ
					  , COUNT(1) OVER() TOTAL_COUNT
				  FROM (
						 SELECT T1.*, T2.CNT
				           FROM NEO_SMS T1
						        JOIN (SELECT A.CAMPUS_NO, MAX(A.KEYGEN) AS KEYGEN, count(*) CNT
						                FROM NEO_SMS A
						               WHERE A.SMS_STATUS = '000'
							             AND A.STATUS IN ('002')
									     AND A.GUBUN != '004' 
				                          GROUP BY CAMPUS_NO
						        ) T2
				                  ON T1.KEYGEN = T2.KEYGEN 
						    WHERE T1.SMS_STATUS = '000'
						      AND T1.STATUS IN ('003' , '004')
						      <if test="searchStartDt != null and searchStartDt != ''">
						      AND T1.SEND_DATE &gt;= CAST(CONCAT(#{searchStartDt},'000000') AS TEXT)
						      </if>
						      <if test="searchEndDt != null and searchEndDt != ''">
						      AND T1.SEND_DATE &lt; CAST(CONCAT(#{searchEndDt}, '240000') AS TEXT)
						      </if>
						      <if test="searchDeptNo != 0">
						      AND T1.DEPT_NO = #{searchDeptNo}
						      </if>
						      <if test="searchUserId != null and searchUserId != ''">
						      AND T1.USER_ID = #{searchUserId}
						      </if>
						      <if test="searchCampNo != null and searchCampNo != 0">
							  AND T1.CAMPUS_NO = #{searchCampNo}
							  </if>
						) A
				  JOIN NEO_CAMPAIGN C ON A.CAMPUS_NO = C.CAMP_NO
		  
			   ) SRC
		 WHERE SEQ BETWEEN (#{page}-1)*#{rows}+1 AND #{page}*#{rows}
	</select>
	
	<select id="getSmsCampList" parameterType="smsSendLogVO" resultType="smsSendLogVO">
		SELECT *
		  FROM (
				SELECT T1.CAMP_NO
					 , T1.CAMP_NM        /* 캠페인명 */
					 , T2.SEND_DATE      /* 최종발송일자 */
					 , T3.SMS_CNT        /* 건수 */
					 , T2.TASK_NM        /* 발송메세지명 */
					 , T2.SEND_TYP       /* 메세지유형 */
					 , T5.CD_NM AS SEND_TYP_NM /* 메일유형 */
					 , T2.USER_ID              /* 사용자명 */
					 , T4.USER_NM              /* 사용자명 */
					 , T2.REG_DT AS SMS_REG_DT     /* 메세지등록일자 */
					 , T1.REG_DT AS CAMP_REG_DT    /* 캠페인등록일자 */
					 , T2.STATUS                   /* 발송상태 */
					 , T6.CD_NM AS STATUS_NM       /* 발송상태 */
					 , ROW_NUMBER() OVER (ORDER BY T2.SEND_DATE DESC) SEQ
					 , COUNT(1) OVER() TOTAL_COUNT
				  FROM NEO_CAMPAIGN T1
				 INNER JOIN (SELECT A.*, (SEND_DATE :: BIGINT + NUM_VAL) :: BIGINT AS LAST_SEND_DATE FROM NEO_SMS A) T2 
				 			ON T1.CAMP_NO = T2.CAMPUS_NO
				 INNER JOIN (
							 SELECT CAMPUS_NO AS CAMP_NO
								  , MAX(SEND_DATE :: BIGINT + NUM_VAL) :: BIGINT AS LAST_SEND_DATE
								  , COUNT(1) AS SMS_CNT 
							   FROM NEO_SMS T01
							  INNER JOIN NEO_DEPT T02 ON (T01.DEPT_NO = T02.DEPT_NO)
							  INNER JOIN NEO_CD T03 ON (T03.CD_GRP = 'C115' AND T01.GUBUN = T03.CD AND T03.UILANG = #{uilang})
							 WHERE T01.SMS_STATUS = '000'
							   AND T01.STATUS IN ('002')
							   <if test="searchGubun != null and searchGubun != ''">
							   AND T01.GUBUN = #{searchGubun}
							   </if>
							   <if test="searchStartDt != null and searchStartDt != ''">
							   AND T01.SEND_DATE &gt;= CAST(CONCAT(#{searchStartDt}, '000000' ) AS TEXT)
							   </if>
							   <if test="searchEndDt != null and searchEndDt != ''">
							   AND T01.SEND_DATE &lt; CAST(CONCAT(#{searchEndDt}, '240000') AS TEXT)
							   </if>
							   <if test="searchDeptNo != 0">
							   AND T01.DEPT_NO = #{searchDeptNo}
							   </if>
							   <if test="searchCampNo != null and searchCampNo != 0">
							   AND T01.CAMPUS_NO = #{searchCampNo}
							   </if>
							   <if test="searchUserId != null and searchUserId != ''">
							   AND T01.USER_ID = #{searchUserId}
							   </if>
							 GROUP BY CAMPUS_NO
							 ) T3 
							 ON T1.CAMP_NO = T3.CAMP_NO
							AND T2.LAST_SEND_DATE = T3.LAST_SEND_DATE
				  LEFT OUTER JOIN NEO_USER T4 ON (T2.USER_ID = T4.USER_ID) 
				  LEFT OUTER JOIN NEO_CD T5 ON T5.CD_GRP = 'C120' AND T2.SEND_TYP = T5.CD AND T5.UILANG = #{uilang}
				  LEFT OUTER JOIN NEO_CD T6 ON T6.CD_GRP = 'C101' AND T2.STATUS = T6.CD AND T6.UILANG = #{uilang}
			   ) SRC
		 WHERE SEQ BETWEEN (#{page}-1)*#{rows}+1 AND #{page}*#{rows}
	</select>
	
	<select id="getInterfaceList" parameterType="smsSendLogVO" resultType="smsSendLogVO">
		SELECT *
		  FROM (
				 SELECT MSGID
					 	, KEYGEN
					 	, DEST_PHONE		--수신자phone
						, SEND_PHONE	--발신자phone
						, TO_CHAR(REQUEST_TIME, 'YYYYMMDDHH24MISS') REQUEST_TIME  --등록시간
						, TO_CHAR(SEND_TIME, 'YYYYMMDDHH24MISS') SEND_TIME		--발송기준시간
						, TO_CHAR(REPORT_TIME, 'YYYYMMDDHH24MISS') REPORT_TIME	--단말기수신시간
						, MSG_BODY		--내용
						, STATUS		--데이터발송상태(대기0/발송중1/발송완료2)
						, MSG_TYPE		--데이터타입(SMS:0/MMS:5)
						, (CASE WHEN CALL_STATUS = '4100' OR CALL_STATUS = '6600' THEN '성공' ELSE '실패' END) AS STATUS_NM
						, CALL_STATUS 
						, (SELECT CD_DTL FROM NEO_CD WHERE CD_GRP = 'C135' AND CALL_STATUS = CD_NM ) CALL_STATUS_NM
					    , ROW_NUMBER() OVER (ORDER BY REQUEST_TIME DESC) SEQ
						, COUNT(1) OVER() TOTAL_COUNT
				   FROM ( SELECT * FROM BIZ_MSG BM 
				           UNION ALL 
				          SELECT * FROM BIZ_LOG
				        ) A
				  WHERE NOT EXISTS (SELECT 1 FROM NEO_SMS X WHERE A.KEYGEN = X.KEYGEN)
				   <if test="searchStartDt != null and searchStartDt != ''">
				   AND SEND_TIME &gt;= TO_TIMESTAMP(CONCAT(#{searchStartDt},'000000'), 'YYYYMMDDHH24MISS')
				   </if> 
				   <if test="searchEndDt != null and searchEndDt != ''">
				   AND SEND_TIME &lt; TO_TIMESTAMP(CONCAT(#{searchEndDt},'235959'), 'YYYYMMDDHH24MISS')
				   </if>
				   <if test="searchCustId != null and searchCustId != ''">
				   AND ID LIKE CONCAT('%', #{searchCustId},'%')
				   </if> 
				   <if test="searchCustPhone != null and searchCustPhone != ''">
				   AND DEST_PHONE LIKE CONCAT('%', #{searchCustPhone},'%')
				   </if>
				   <if test="searchStatus != null and searchStatus != ''">
				   		<if test="searchStatus == 1">
				   			AND CALL_STATUS IN ('4100','6600') 
				   		</if>
				   		<if test="searchStatus == 0">
				   			AND CALL_STATUS NOT IN ('4100','6600')
					   </if> 
				   </if> 
				  )
				  WHERE SEQ BETWEEN (#{page}-1)*#{rows}+1 AND #{page}*#{rows}
	</select>
</mapper>